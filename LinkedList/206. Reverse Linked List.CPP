/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseList(ListNode* head) {
       vector<int> res;
       ListNode *temp = head;
       while(temp!=NULL){
        res.push_back(temp->val);
        temp = temp->next;
       } 

       int i = res.size()-1;
       temp = head;
       while(temp){
        temp->val = res[i];
        i--;
        temp = temp->next;
       }

       return head;
    }
    //Reverse NOdes of Linked List
 ListNode* reverseList(ListNode* head){
        ListNode *curr = head, *prev = NULL, *fut = NULL;
        while(curr){
            fut = curr->next;
            curr->next = prev;
            prev = curr;
            curr = fut;
        }
        head = prev;
        return head;
    }
};
